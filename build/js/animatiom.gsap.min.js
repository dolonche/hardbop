!function(e,n){"function"==typeof define&&define.amd?define(["ScrollMagic","TweenMax","TimelineMax"],n):"object"==typeof exports?(require("gsap"),n(require("scrollmagic"),TweenMax,TimelineMax)):n(e.ScrollMagic||e.jQuery&&e.jQuery.ScrollMagic,e.TweenMax||e.TweenLite,e.TimelineMax||e.TimelineLite)}(this,function(e,w,h){var n="animation.gsap",o=window.console||{},t=Function.prototype.bind.call(o.error||o.log||function(){},o);e||t("("+n+") -> ERROR: The ScrollMagic main module could not be found. Please make sure it's loaded before this plugin or use an asynchronous loader like requirejs."),w||t("("+n+") -> ERROR: TweenLite or TweenMax could not be found. Please make sure GSAP is loaded before ScrollMagic or use an asynchronous loader like requirejs."),e.Scene.addOption("tweenChanges",!1,function(e){return!!e}),e.Scene.extend(function(){var p,d=this,g=function(){d._log&&(Array.prototype.splice.call(arguments,1,0,"("+n+")","->"),d._log.apply(this,arguments))};d.on("progress.plugin_gsap",function(){f()}),d.on("destroy.plugin_gsap",function(e){d.removeTween(e.reset)});var f=function(){if(p){var e=d.progress(),n=d.state();p.repeat&&-1===p.repeat()?"DURING"===n&&p.paused()?p.play():"DURING"===n||p.paused()||p.pause():e!=p.progress()&&(0===d.duration()?0<e?p.play():p.reverse():d.tweenChanges()&&p.tweenTo?p.tweenTo(e*p.duration()):p.progress(e).pause())}};d.setTween=function(e,n,o){var t;1<arguments.length&&(arguments.length<3&&(o=n,n=1),e=w.to(e,n,o));try{(t=h?new h({smoothChildTiming:!0}).add(e):e).pause()}catch(e){return g(1,"ERROR calling method 'setTween()': Supplied argument is not a valid TweenObject"),d}if(p&&d.removeTween(),p=t,e.repeat&&-1===e.repeat()&&(p.repeat(-1),p.yoyo(e.yoyo())),d.tweenChanges()&&!p.tweenTo&&g(2,"WARNING: tweenChanges will only work if the TimelineMax object is available for ScrollMagic."),p&&d.controller()&&d.triggerElement()&&2<=d.loglevel()){var r=w.getTweensOf(d.triggerElement()),i=d.controller().info("vertical");r.forEach(function(e,n){var o=e.vars.css||e.vars;if(i?void 0!==o.top||void 0!==o.bottom:void 0!==o.left||void 0!==o.right)return g(2,"WARNING: Tweening the position of the trigger element affects the scene timing and should be avoided!"),!1})}if(1.14<=parseFloat(TweenLite.version))for(var a,l,s=p.getChildren?p.getChildren(!0,!0,!1):[p],c=function(){g(2,"WARNING: tween was overwritten by another. To learn how to avoid this issue see here: https://github.com/janpaepke/ScrollMagic/wiki/WARNING:-tween-was-overwritten-by-another")},u=0;u<s.length;u++)a=s[u],l!==c&&(l=a.vars.onOverwrite,a.vars.onOverwrite=function(){l&&l.apply(this,arguments),c.apply(this,arguments)});return g(3,"added tween"),f(),d},d.removeTween=function(e){return p&&(e&&p.progress(0).pause(),p.kill(),p=void 0,g(3,"removed tween (reset: "+(e?"true":"false")+")")),d}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbS5nc2FwLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJUd2Vlbk1heCIsIlRpbWVsaW5lTWF4IiwiU2Nyb2xsTWFnaWMiLCJqUXVlcnkiLCJUd2VlbkxpdGUiLCJUaW1lbGluZUxpdGUiLCJ0aGlzIiwiVHdlZW4iLCJUaW1lbGluZSIsIk5BTUVTUEFDRSIsImNvbnNvbGUiLCJ3aW5kb3ciLCJlcnIiLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsImJpbmQiLCJjYWxsIiwiZXJyb3IiLCJsb2ciLCJTY2VuZSIsImFkZE9wdGlvbiIsInZhbCIsImV4dGVuZCIsIl90d2VlbiIsIl9sb2ciLCJBcnJheSIsInNwbGljZSIsImFyZ3VtZW50cyIsImFwcGx5Iiwib24iLCJ1cGRhdGVUd2VlblByb2dyZXNzIiwiZSIsInJlbW92ZVR3ZWVuIiwicmVzZXQiLCJwcm9ncmVzcyIsInN0YXRlIiwicmVwZWF0IiwicGF1c2VkIiwicGxheSIsInBhdXNlIiwiZHVyYXRpb24iLCJyZXZlcnNlIiwidHdlZW5DaGFuZ2VzIiwidHdlZW5UbyIsInNldFR3ZWVuIiwiVHdlZW5PYmplY3QiLCJwYXJhbXMiLCJuZXdUd2VlbiIsImxlbmd0aCIsInRvIiwic21vb3RoQ2hpbGRUaW1pbmciLCJhZGQiLCJ5b3lvIiwiY29udHJvbGxlciIsInRyaWdnZXJFbGVtZW50IiwibG9nbGV2ZWwiLCJ0cmlnZ2VyVHdlZW5zIiwiZ2V0VHdlZW5zT2YiLCJ2ZXJ0aWNhbCIsImluZm8iLCJmb3JFYWNoIiwidmFsdWUiLCJpbmRleCIsInR3ZWVudmFycyIsInZhcnMiLCJjc3MiLCJ1bmRlZmluZWQiLCJ0b3AiLCJib3R0b20iLCJsZWZ0IiwicmlnaHQiLCJwYXJzZUZsb2F0IiwidmVyc2lvbiIsInRoaXNUd2VlbiIsIm9sZENhbGxiYWNrIiwibGlzdCIsImdldENoaWxkcmVuIiwibmV3Q2FsbGJhY2siLCJpIiwib25P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LEVBQVVLLFlBQTRDRixJQUFuQkgsRUFBVU0sV0FBMENILElBQXBCSCxFQUFVTyxNQUdwSSxPQURBcEQsRUFBSSxFQUFHLDBHQUNBLElBTW5CLEdBQXFDLE1BQWpDcUQsV0FBV25FLFVBQVVvRSxTQU1yQixJQUxBLElBS2NDLEVBQVdDLEVBSnJCQyxFQUFPcEQsRUFBT3FELFlBQWNyRCxFQUFPcUQsYUFBWSxHQUFNLEdBQU0sR0FBUyxDQUFDckQsR0FDckVzRCxFQUFjLFdBQ1YzRCxFQUFJLEVBQUcsa0xBRU40RCxFQUFFLEVBQTJCQSxFQUFFSCxFQUFLM0IsT0FBUThCLElBRWpETCxFQUFZRSxFQUFLRyxHQUNiSixJQUFnQkcsSUFDaEJILEVBQWNELEVBQVVULEtBQUtlLFlBQzdCTixFQUFVVCxLQUFLZSxZQUFjLFdBQ3JCTCxHQUNBQSxFQUFZOUMsTUFBTXRCLEtBQU1xQixXQUU1QmtELEVBQVlqRCxNQUFNdEIsS0FBTXFCLGFBU3hDLE9BSEFULEVBQUksRUFBRyxlQUVQWSxJQUNPWCxHQW9CWEEsRUFBTWEsWUFBYyxTQUFVQyxHQVMxQixPQVJJVixJQUNJVSxHQUNBVixFQUFPVyxTQUFTLEdBQUdLLFFBRXZCaEIsRUFBT3lELE9BQ1B6RCxPQUFTMkMsRUFDVGhELEVBQUksRUFBRywwQkFBNEJlLEVBQVEsT0FBUyxTQUFXLE1BRTVEZCIsImZpbGUiOiJhbmltYXRpb20uZ3NhcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuwqAqwqBAZmlsZcKgU2Nyb2xsTWFnaWPCoEdTQVDCoEFuaW1hdGlvbsKgUGx1Z2luLlxuwqAqXG7CoCrCoHJlcXVpcmVzOsKgR1NBUMKgfjEuMTRcbsKgKsKgUG93ZXJlZMKgYnnCoHRoZcKgR3JlZW5zb2NrwqBBbmltYXRpb27CoFBsYXRmb3JtwqAoR1NBUCk6wqBodHRwOi8vd3d3LmdyZWVuc29jay5jb20vanNcbsKgKsKgR3JlZW5zb2NrwqBMaWNlbnNlwqBpbmZvwqBhdMKgaHR0cDovL3d3dy5ncmVlbnNvY2suY29tL2xpY2Vuc2luZy9cbsKgKi9cbi8qKlxuwqAqwqBUaGlzwqBwbHVnaW7CoGlzwqBtZWFudMKgdG/CoGJlwqB1c2VkwqBpbsKgY29uanVuY3Rpb27CoHdpdGjCoHRoZcKgR3JlZW5zb2NrwqBBbmltYXRpb27CoFBsYXR0Zm9ybS7CoMKgXG7CoCrCoEl0wqBvZmZlcnPCoGFuwqBlYXN5wqBBUEnCoHRvwqB0cmlnZ2VywqBUd2VlbnPCoG9ywqBzeW5jaHJvbml6ZcKgdGhlbcKgdG/CoHRoZcKgc2Nyb2xsYmFywqBtb3ZlbWVudC5cbsKgKlxuwqAqwqBCb3RowqB0aGXCoGBsaXRlYMKgYW5kwqB0aGXCoGBtYXhgwqB2ZXJzaW9uc8Kgb2bCoHRoZcKgR1NBUMKgbGlicmFyecKgYXJlwqBzdXBwb3J0ZWQuwqDCoFxuwqAqwqBUaGXCoG1vc3TCoGJhc2ljwqByZXF1aXJlbWVudMKgaXPCoGBUd2VlbkxpdGVgLlxuwqAqwqBcbsKgKsKgVG/CoGhhdmXCoGFjY2Vzc8KgdG/CoHRoaXPCoGV4dGVuc2lvbizCoHBsZWFzZcKgaW5jbHVkZcKgYHBsdWdpbnMvYW5pbWF0aW9uLmdzYXAuanNgLlxuwqAqwqBAcmVxdWlyZXPCoHtAbGlua8KgaHR0cDovL2dyZWVuc29jay5jb20vZ3NhcHxHU0FQwqB+MS4xNC54fVxuwqAqwqBAbWl4aW7CoGFuaW1hdGlvbi5HU0FQXG7CoCovXG4oZnVuY3Rpb27CoChyb290LMKgZmFjdG9yeSnCoHtcbsKgwqDCoMKgaWbCoCh0eXBlb2bCoGRlZmluZcKgPT09wqAnZnVuY3Rpb24nwqAmJsKgZGVmaW5lLmFtZCnCoHtcbsKgwqDCoMKgwqDCoMKgwqAvL8KgQU1ELsKgUmVnaXN0ZXLCoGFzwqBhbsKgYW5vbnltb3VzwqBtb2R1bGUuXG7CoMKgwqDCoMKgwqDCoMKgZGVmaW5lKFsnU2Nyb2xsTWFnaWMnLMKgJ1R3ZWVuTWF4JyzCoCdUaW1lbGluZU1heCddLMKgZmFjdG9yeSk7XG7CoMKgwqDCoH3CoGVsc2XCoGlmwqAodHlwZW9mwqBleHBvcnRzwqA9PT3CoCdvYmplY3QnKcKge1xuwqDCoMKgwqDCoMKgwqDCoC8vwqBDb21tb25KU1xuwqDCoMKgwqDCoMKgwqDCoC8vwqBMb2Fkc8Kgd2hvbGXCoGdzYXDCoHBhY2thZ2XCoG9udG/CoGdsb2JhbMKgc2NvcGUuXG7CoMKgwqDCoMKgwqDCoMKgcmVxdWlyZSgnZ3NhcCcpO1xuwqDCoMKgwqDCoMKgwqDCoGZhY3RvcnkocmVxdWlyZSgnc2Nyb2xsbWFnaWMnKSzCoFR3ZWVuTWF4LMKgVGltZWxpbmVNYXgpO1xuwqDCoMKgwqB9wqBlbHNlwqB7XG7CoMKgwqDCoMKgwqDCoMKgLy/CoEJyb3dzZXLCoGdsb2JhbHNcbsKgwqDCoMKgwqDCoMKgwqBmYWN0b3J5KHJvb3QuU2Nyb2xsTWFnaWPCoHx8wqAocm9vdC5qUXVlcnnCoCYmwqByb290LmpRdWVyeS5TY3JvbGxNYWdpYykswqByb290LlR3ZWVuTWF4wqB8fMKgcm9vdC5Ud2VlbkxpdGUswqByb290LlRpbWVsaW5lTWF4wqB8fMKgcm9vdC5UaW1lbGluZUxpdGUpO1xuwqDCoMKgwqB9XG59KHRoaXMswqBmdW5jdGlvbihTY3JvbGxNYWdpYyzCoFR3ZWVuLMKgVGltZWxpbmUpwqB7XG7CoMKgwqDCoFwidXNlwqBzdHJpY3RcIjtcbsKgwqDCoMKgdmFywqBOQU1FU1BBQ0XCoD3CoFwiYW5pbWF0aW9uLmdzYXBcIjtcblxuwqDCoMKgwqAvL8KgKEJVSUxEKcKgLcKgUkVNT1ZFwqBJTsKgTUlOSUZZwqAtwqBTVEFSVFxuwqDCoMKgwqB2YXJcbsKgwqDCoMKgwqDCoMKgwqBjb25zb2xlwqA9wqB3aW5kb3cuY29uc29sZcKgfHzCoHt9LFxuwqDCoMKgwqDCoMKgwqDCoGVycsKgPcKgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuY2FsbChjb25zb2xlLmVycm9ywqB8fMKgY29uc29sZS5sb2fCoHx8wqBmdW5jdGlvbigpwqB7fSzCoGNvbnNvbGUpO1xuwqDCoMKgwqBpZsKgKCFTY3JvbGxNYWdpYynCoHtcbsKgwqDCoMKgwqDCoMKgwqBlcnIoXCIoXCLCoCvCoE5BTUVTUEFDRcKgK8KgXCIpwqAtPsKgRVJST1I6wqBUaGXCoFNjcm9sbE1hZ2ljwqBtYWluwqBtb2R1bGXCoGNvdWxkwqBub3TCoGJlwqBmb3VuZC7CoFBsZWFzZcKgbWFrZcKgc3VyZcKgaXQnc8KgbG9hZGVkwqBiZWZvcmXCoHRoaXPCoHBsdWdpbsKgb3LCoHVzZcKgYW7CoGFzeW5jaHJvbm91c8KgbG9hZGVywqBsaWtlwqByZXF1aXJlanMuXCIpO1xuwqDCoMKgwqB9XG7CoMKgwqDCoGlmwqAoIVR3ZWVuKcKge1xuwqDCoMKgwqDCoMKgwqDCoGVycihcIihcIsKgK8KgTkFNRVNQQUNFwqArwqBcIinCoC0+wqBFUlJPUjrCoFR3ZWVuTGl0ZcKgb3LCoFR3ZWVuTWF4wqBjb3VsZMKgbm90wqBiZcKgZm91bmQuwqBQbGVhc2XCoG1ha2XCoHN1cmXCoEdTQVDCoGlzwqBsb2FkZWTCoGJlZm9yZcKgU2Nyb2xsTWFnaWPCoG9ywqB1c2XCoGFuwqBhc3luY2hyb25vdXPCoGxvYWRlcsKgbGlrZcKgcmVxdWlyZWpzLlwiKTtcbsKgwqDCoMKgfVxuwqDCoMKgwqAvL8KgKEJVSUxEKcKgLcKgUkVNT1ZFwqBJTsKgTUlOSUZZwqAtwqBFTkRcbsKgwqDCoMKgXG7CoMKgwqDCoC8qXG7CoMKgwqDCoMKgKsKgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuwqDCoMKgwqDCoCrCoEV4dGVuc2lvbnPCoGZvcsKgU2NlbmVcbsKgwqDCoMKgwqAqwqAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG7CoMKgwqDCoMKgKi9cbsKgwqDCoMKgLyoqXG7CoMKgwqDCoMKgKsKgRXZlcnnCoGluc3RhbmNlwqBvZsKgU2Nyb2xsTWFnaWMuU2NlbmXCoG5vd8KgYWNjZXB0c8KgYW7CoGFkZGl0aW9uYWzCoG9wdGlvbi7CoMKgXG7CoMKgwqDCoMKgKsKgU2VlwqB7QGxpbmvCoFNjcm9sbE1hZ2ljLlNjZW5lfcKgZm9ywqBhwqBjb21wbGV0ZcKgbGlzdMKgb2bCoHRoZcKgc3RhbmRhcmTCoG9wdGlvbnMuXG7CoMKgwqDCoMKgKsKgQG1lbWJlcm9mIcKgYW5pbWF0aW9uLkdTQVAjXG7CoMKgwqDCoMKgKsKgQG1ldGhvZMKgbmV3wqBTY3JvbGxNYWdpYy5TY2VuZShvcHRpb25zKVxuwqDCoMKgwqDCoCrCoEBleGFtcGxlXG7CoMKgwqDCoMKgKsKgdmFywqBzY2VuZcKgPcKgbmV3wqBTY3JvbGxNYWdpYy5TY2VuZSh7dHdlZW5DaGFuZ2VzOsKgdHJ1ZX0pO1xuwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqAqwqBAcGFyYW3CoHtvYmplY3R9wqBbb3B0aW9uc13CoC3CoE9wdGlvbnPCoGZvcsKgdGhlwqBTY2VuZS7CoFRoZcKgb3B0aW9uc8KgY2FuwqBiZcKgdXBkYXRlZMKgYXTCoGFuecKgdGltZS5cbsKgwqDCoMKgwqAqwqBAcGFyYW3CoHtib29sZWFufcKgW29wdGlvbnMudHdlZW5DaGFuZ2VzPWZhbHNlXcKgLcKgVHdlZW5zwqBBbmltYXRpb27CoHRvwqB0aGXCoHByb2dyZXNzwqB0YXJnZXTCoGluc3RlYWTCoG9mwqBzZXR0aW5nwqBpdC7CoMKgXG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBEb2VzwqBub3TCoGFmZmVjdMKgYW5pbWF0aW9uc8Kgd2hlcmXCoGR1cmF0aW9uwqBpc8KgYDBgLlxuwqDCoMKgwqDCoCovXG7CoMKgwqDCoC8qKlxuwqDCoMKgwqDCoCrCoCoqR2V0KirCoG9ywqAqKlNldCoqwqB0aGXCoHR3ZWVuQ2hhbmdlc8Kgb3B0aW9uwqB2YWx1ZS7CoMKgXG7CoMKgwqDCoMKgKsKgVGhpc8Kgb25secKgYWZmZWN0c8Kgc2NlbmVzwqB3aXRowqBhwqBkdXJhdGlvbi7CoElmwqBgdHdlZW5DaGFuZ2VzYMKgaXPCoGB0cnVlYCzCoHRoZcKgcHJvZ3Jlc3PCoHVwZGF0ZcKgd2hlbsKgc2Nyb2xsaW5nwqB3aWxswqBub3TCoGJlwqBpbW1lZGlhdGUswqBidXTCoGluc3RlYWTCoHRoZcKgYW5pbWF0aW9uwqB3aWxswqBzbW9vdGhsecKgYW5pbWF0ZcKgdG/CoHRoZcKgdGFyZ2V0wqBzdGF0ZS7CoMKgXG7CoMKgwqDCoMKgKsKgRm9ywqBhwqBiZXR0ZXLCoHVuZGVyc3RhbmRpbmcswqB0cnnCoGVuYWJsaW5nwqBhbmTCoGRpc2FibGluZ8KgdGhpc8Kgb3B0aW9uwqBpbsKgdGhlwqBbU2NlbmXCoE1hbmlwdWxhdGlvbsKgRXhhbXBsZV0oLi4vZXhhbXBsZXMvYmFzaWMvc2NlbmVfbWFuaXB1bGF0aW9uLmh0bWwpLlxuwqDCoMKgwqDCoCrCoEBtZW1iZXJvZiHCoGFuaW1hdGlvbi5HU0FQI1xuwqDCoMKgwqDCoCrCoEBtZXRob2TCoFNjZW5lLnR3ZWVuQ2hhbmdlc1xuwqDCoMKgwqDCoCrCoFxuwqDCoMKgwqDCoCrCoEBleGFtcGxlXG7CoMKgwqDCoMKgKsKgLy/CoGdldMKgdGhlwqBjdXJyZW50wqB0d2VlbkNoYW5nZXPCoG9wdGlvblxuwqDCoMKgwqDCoCrCoHZhcsKgdHdlZW5DaGFuZ2VzwqA9wqBzY2VuZS50d2VlbkNoYW5nZXMoKTtcbsKgwqDCoMKgwqAqXG7CoMKgwqDCoMKgKsKgLy/CoHNldMKgbmV3wqB0d2VlbkNoYW5nZXPCoG9wdGlvblxuwqDCoMKgwqDCoCrCoHNjZW5lLnR3ZWVuQ2hhbmdlcyh0cnVlKTtcbsKgwqDCoMKgwqAqXG7CoMKgwqDCoMKgKsKgQGZpcmVzwqB7QGxpbmvCoFNjZW5lLmNoYW5nZX0swqB3aGVuwqB1c2VkwqBhc8Kgc2V0dGVyXG7CoMKgwqDCoMKgKsKgQHBhcmFtwqB7Ym9vbGVhbn3CoFtuZXdUd2VlbkNoYW5nZXNdwqAtwqBUaGXCoG5ld8KgdHdlZW5DaGFuZ2VzwqBzZXR0aW5nwqBvZsKgdGhlwqBzY2VuZS5cbsKgwqDCoMKgwqAqwqBAcmV0dXJuc8Kge2Jvb2xlYW59wqBgZ2V0YMKgLcKgwqBDdXJyZW50wqB0d2VlbkNoYW5nZXPCoG9wdGlvbsKgdmFsdWUuXG7CoMKgwqDCoMKgKsKgQHJldHVybnPCoHtTY2VuZX3CoGBzZXRgwqAtwqDCoFBhcmVudMKgb2JqZWN0wqBmb3LCoGNoYWluaW5nLlxuwqDCoMKgwqDCoCovXG7CoMKgwqDCoC8vwqBhZGTCoG9wdGlvbsKgKFRPRE86wqBET0PCoChwcml2YXRlwqBmb3LCoGRldikpXG7CoMKgwqDCoFNjcm9sbE1hZ2ljLlNjZW5lLmFkZE9wdGlvbihcbsKgwqDCoMKgwqDCoMKgwqBcInR3ZWVuQ2hhbmdlc1wiLMKgLy/CoG5hbWVcbsKgwqDCoMKgwqDCoMKgwqBmYWxzZSzCoC8vwqBkZWZhdWx0XG7CoMKgwqDCoMKgwqDCoMKgZnVuY3Rpb27CoCh2YWwpwqB7wqAvL8KgdmFsaWRhdGlvbsKgY2FsbGJhY2tcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHJldHVybsKgISF2YWw7XG7CoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqApO1xuwqDCoMKgwqAvL8KgZXh0ZW5kwqBzY2VuZVxuwqDCoMKgwqBTY3JvbGxNYWdpYy5TY2VuZS5leHRlbmQoZnVuY3Rpb27CoCgpwqB7XG7CoMKgwqDCoMKgwqDCoMKgdmFywqBTY2VuZcKgPcKgdGhpcyxcbsKgwqDCoMKgwqDCoMKgwqBfdHdlZW47XG5cbsKgwqDCoMKgwqDCoMKgwqAvL8KgKEJVSUxEKcKgLcKgUkVNT1ZFwqBJTsKgTUlOSUZZwqAtwqBTVEFSVFxuwqDCoMKgwqDCoMKgwqDCoHZhcsKgbG9nwqA9wqBmdW5jdGlvbsKgKCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGlmwqAoU2NlbmUuX2xvZynCoHvCoC8vwqBub3TCoGF2YWlsYWJsZSzCoHdoZW7CoG1haW7CoHNvdXJjZcKgbWluaWZpZWRcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgQXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKGFyZ3VtZW50cyzCoDEswqAwLMKgXCIoXCLCoCvCoE5BTUVTUEFDRcKgK8KgXCIpXCIswqBcIi0+XCIpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBTY2VuZS5fbG9nLmFwcGx5KHRoaXMswqBhcmd1bWVudHMpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqDCoMKgwqDCoH07XG7CoMKgwqDCoMKgwqDCoMKgLy/CoChCVUlMRCnCoC3CoFJFTU9WRcKgSU7CoE1JTklGWcKgLcKgRU5EXG5cbsKgwqDCoMKgwqDCoMKgwqAvL8Kgc2V0wqBsaXN0ZW5lcnNcbsKgwqDCoMKgwqDCoMKgwqBTY2VuZS5vbihcInByb2dyZXNzLnBsdWdpbl9nc2FwXCIswqBmdW5jdGlvbsKgKCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHVwZGF0ZVR3ZWVuUHJvZ3Jlc3MoKTtcbsKgwqDCoMKgwqDCoMKgwqB9KTtcbsKgwqDCoMKgwqDCoMKgwqBTY2VuZS5vbihcImRlc3Ryb3kucGx1Z2luX2dzYXBcIizCoGZ1bmN0aW9uwqAoZSnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoFNjZW5lLnJlbW92ZVR3ZWVuKGUucmVzZXQpO1xuwqDCoMKgwqDCoMKgwqDCoH0pO1xuXG7CoMKgwqDCoMKgwqDCoMKgLyoqXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBVcGRhdGXCoHRoZcKgdHdlZW7CoHByb2dyZXNzwqB0b8KgY3VycmVudMKgcG9zaXRpb24uXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBAcHJpdmF0ZVxuwqDCoMKgwqDCoMKgwqDCoMKgKi9cbsKgwqDCoMKgwqDCoMKgwqB2YXLCoHVwZGF0ZVR3ZWVuUHJvZ3Jlc3PCoD3CoGZ1bmN0aW9uwqAoKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChfdHdlZW4pwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHZhclxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHByb2dyZXNzwqA9wqBTY2VuZS5wcm9ncmVzcygpLFxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHN0YXRlwqA9wqBTY2VuZS5zdGF0ZSgpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKF90d2Vlbi5yZXBlYXTCoCYmwqBfdHdlZW4ucmVwZWF0KCnCoD09PcKgLTEpwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgLy/CoGluZmluaXRlwqBsb29wLMKgc2/CoG5vdMKgaW7CoHJlbGF0aW9uwqB0b8KgcHJvZ3Jlc3NcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKHN0YXRlwqA9PT3CoCdEVVJJTkcnwqAmJsKgX3R3ZWVuLnBhdXNlZCgpKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgX3R3ZWVuLnBsYXkoKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9wqBlbHNlwqBpZsKgKHN0YXRlwqAhPT3CoCdEVVJJTkcnwqAmJsKgIV90d2Vlbi5wYXVzZWQoKSnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoF90d2Vlbi5wYXVzZSgpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfcKgZWxzZcKgaWbCoChwcm9ncmVzc8KgIT3CoF90d2Vlbi5wcm9ncmVzcygpKcKge8KgLy/CoGRvwqB3ZcKgZXZlbsKgbmVlZMKgdG/CoHVwZGF0ZcKgdGhlwqBwcm9ncmVzcz9cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvL8Kgbm/CoGluZmluaXRlwqBsb29wwqAtwqBzb8Kgc2hvdWxkwqB3ZcKganVzdMKgcGxhecKgb3LCoGdvwqB0b8KgYcKgc3BlY2lmaWPCoHBvaW50wqBpbsKgdGltZT9cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKFNjZW5lLmR1cmF0aW9uKCnCoD09PcKgMCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoC8vwqBwbGF5wqB0aGXCoGFuaW1hdGlvblxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChwcm9ncmVzc8KgPsKgMCnCoHvCoC8vwqBwbGF5wqBmcm9twqAwwqB0b8KgMVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4ucGxheSgpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfcKgZWxzZcKge8KgLy/CoHBsYXnCoGZyb23CoDHCoHRvwqAwXG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoF90d2Vlbi5yZXZlcnNlKCk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfcKgZWxzZcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgLy/CoGdvwqB0b8KgYcKgc3BlY2lmaWPCoHBvaW50wqBpbsKgdGltZVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChTY2VuZS50d2VlbkNoYW5nZXMoKcKgJibCoF90d2Vlbi50d2VlblRvKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvL8KgZ2/CoHNtb290aFxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4udHdlZW5Ubyhwcm9ncmVzc8KgKsKgX3R3ZWVuLmR1cmF0aW9uKCkpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfcKgZWxzZcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvL8KganVzdMKgaGFyZMKgc2V0wqBpdFxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4ucHJvZ3Jlc3MocHJvZ3Jlc3MpLnBhdXNlKCk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgfTtcblxuwqDCoMKgwqDCoMKgwqDCoC8qKlxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgQWRkwqBhwqB0d2VlbsKgdG/CoHRoZcKgc2NlbmUuwqDCoFxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgSWbCoHlvdcKgd2FudMKgdG/CoGFkZMKgbXVsdGlwbGXCoHR3ZWVucyzCoGFkZMKgdGhlbcKgaW50b8KgYcKgR1NBUMKgVGltZWxpbmXCoG9iamVjdMKgYW5kwqBzdXBwbHnCoGl0wqBpbnN0ZWFkwqAoc2VlwqBleGFtcGxlwqBiZWxvdykuwqDCoFxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBJZsKgdGhlwqBzY2VuZcKgaGFzwqBhwqBkdXJhdGlvbizCoHRoZcKgdHdlZW4nc8KgZHVyYXRpb27CoHdpbGzCoGJlwqBwcm9qZWN0ZWTCoHRvwqB0aGXCoHNjcm9sbMKgZGlzdGFuY2XCoG9mwqB0aGXCoHNjZW5lLMKgbWVhbmluZ8KgaXRzwqBwcm9ncmVzc8Kgd2lsbMKgYmXCoHN5bmNlZMKgdG/CoHNjcm9sbGJhcsKgbW92ZW1lbnQuwqDCoFxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgRm9ywqBhwqBzY2VuZcKgd2l0aMKgYcKgZHVyYXRpb27CoG9mwqBgMGAswqB0aGXCoHR3ZWVuwqB3aWxswqBiZcKgdHJpZ2dlcmVkwqB3aGVuwqBzY3JvbGxpbmfCoGZvcndhcmTCoHBhc3TCoHRoZcKgc2NlbmUnc8KgdHJpZ2dlcsKgcG9zaXRpb27CoGFuZMKgcmV2ZXJzZWQswqB3aGVuwqBzY3JvbGxpbmfCoGJhY2suwqDCoFxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgVG/CoGdhaW7CoGJldHRlcsKgdW5kZXJzdGFuZGluZyzCoGNoZWNrwqBvdXTCoHRoZcKgW1NpbXBsZcKgVHdlZW5pbmfCoGV4YW1wbGVdKC4uL2V4YW1wbGVzL2Jhc2ljL3NpbXBsZV90d2VlbmluZy5odG1sKS5cbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoEluc3RlYWTCoG9mwqBzdXBwbHlpbmfCoGHCoHR3ZWVuwqB0aGlzwqBtZXRob2TCoGNhbsKgYWxzb8KgYmXCoHVzZWTCoGFzwqBhwqBzaG9ydGhhbmTCoGZvcsKgYFR3ZWVuTWF4LnRvKClgwqAoc2VlwqBleGFtcGxlwqBiZWxvdykuXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBAbWVtYmVyb2YhwqBhbmltYXRpb24uR1NBUCNcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoEBleGFtcGxlXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqAvL8KgYWRkwqBhwqBzaW5nbGXCoHR3ZWVuwqBkaXJlY3RseVxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgc2NlbmUuc2V0VHdlZW4oVHdlZW5NYXgudG8oXCJvYmpcIikswqAxLMKge3g6wqAxMDB9KTtcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoC8vwqBhZGTCoGHCoHNpbmdsZcKgdHdlZW7CoHZpYcKgdmFyaWFibGVcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoHZhcsKgdHdlZW7CoD3CoFR3ZWVuTWF4LnRvKFwib2JqXCIpLMKgMSzCoHt4OsKgMTAwfTtcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoHNjZW5lLnNldFR3ZWVuKHR3ZWVuKTtcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoC8vwqBhZGTCoG11bHRpcGxlwqB0d2VlbnMswqB3cmFwcGVkwqBpbsKgYcKgdGltZWxpbmUuXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqB2YXLCoHRpbWVsaW5lwqA9wqBuZXfCoFRpbWVsaW5lTWF4KCk7XG7CoMKgwqDCoMKgwqDCoMKgwqAqwqB2YXLCoHR3ZWVuMcKgPcKgVHdlZW5NYXguZnJvbShcIm9iajFcIizCoDEswqB7eDrCoDEwMH0pO1xuwqDCoMKgwqDCoMKgwqDCoMKgKsKgdmFywqB0d2VlbjLCoD3CoFR3ZWVuTWF4LnRvKFwib2JqMlwiLMKgMSzCoHt5OsKgMTAwfSk7XG7CoMKgwqDCoMKgwqDCoMKgwqAqwqB0aW1lbGluZVxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgwqDCoMKgwqDCoC5hZGQodHdlZW4xKVxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgwqDCoMKgwqDCoC5hZGQodHdlZW4yKTtcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoHNjZW5lLmFkZFR3ZWVuKHRpbWVsaW5lKTtcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoC8vwqBzaG9ydMKgaGFuZMKgdG/CoGFkZMKgYcKgVHdlZW5NYXgudG8oKcKgdHdlZW5cbsKgwqDCoMKgwqDCoMKgwqDCoCrCoHNjZW5lLnNldFR3ZWVuKFwib2JqM1wiLMKgMC41LMKge3k6wqAxMDB9KTtcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoC8vwqBzaG9ydMKgaGFuZMKgdG/CoGFkZMKgYcKgVHdlZW5NYXgudG8oKcKgdHdlZW7CoGZvcsKgMcKgc2Vjb25kXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqAvL8KgdGhpc8KgaXPCoHVzZWZ1bCzCoHdoZW7CoHRoZcKgc2NlbmXCoGhhc8KgYcKgZHVyYXRpb27CoGFuZMKgdGhlwqB0d2VlbsKgZHVyYXRpb27CoGlzbid0wqBpbXBvcnRhbnTCoGFueXdheVxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgc2NlbmUuc2V0VHdlZW4oXCJvYmozXCIswqB7eTrCoDEwMH0pO1xuwqDCoMKgwqDCoMKgwqDCoMKgKlxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgQHBhcmFtwqB7KG9iamVjdHxzdHJpbmcpfcKgVHdlZW5PYmplY3TCoC3CoEHCoFR3ZWVuTWF4LMKgVHdlZW5MaXRlLMKgVGltZWxpbmVNYXjCoG9ywqBUaW1lbGluZUxpdGXCoG9iamVjdMKgdGhhdMKgc2hvdWxkwqBiZcKgYW5pbWF0ZWTCoGluwqB0aGXCoHNjZW5lLsKgQ2FuwqBhbHNvwqBiZcKgYcKgRG9twqBFbGVtZW50wqBvcsKgU2VsZWN0b3IswqB3aGVuwqB1c2luZ8KgZGlyZWN0wqB0d2VlbsKgZGVmaW5pdGlvbsKgKHNlZcKgZXhhbXBsZXMpLlxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgQHBhcmFtwqB7KG51bWJlcnxvYmplY3QpfcKgZHVyYXRpb27CoC3CoEHCoGR1cmF0aW9uwqBmb3LCoHRoZcKgdHdlZW4swqBvcsKgdHdlZW7CoHBhcmFtZXRlcnMuwqBJZsKgYW7CoG9iamVjdMKgY29udGFpbmluZ8KgcGFyYW1ldGVyc8KgYXJlwqBzdXBwbGllZCzCoGHCoGRlZmF1bHTCoGR1cmF0aW9uwqBvZsKgMcKgd2lsbMKgYmXCoHVzZWQuXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBAcGFyYW3CoHtvYmplY3R9wqBwYXJhbXPCoC3CoFRoZcKgcGFyYW1ldGVyc8KgZm9ywqB0aGXCoHR3ZWVuXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBAcmV0dXJuc8Kge1NjZW5lfcKgUGFyZW50wqBvYmplY3TCoGZvcsKgY2hhaW5pbmcuXG7CoMKgwqDCoMKgwqDCoMKgwqAqL1xuwqDCoMKgwqDCoMKgwqDCoFNjZW5lLnNldFR3ZWVuwqA9wqBmdW5jdGlvbsKgKFR3ZWVuT2JqZWN0LMKgZHVyYXRpb24swqBwYXJhbXMpwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2YXLCoG5ld1R3ZWVuO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChhcmd1bWVudHMubGVuZ3RowqA+wqAxKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKMKgYXJndW1lbnRzLmxlbmd0aMKgPMKgMynCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBwYXJhbXPCoD3CoGR1cmF0aW9uO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGR1cmF0aW9uwqA9wqAxO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoFR3ZWVuT2JqZWN0wqA9wqBUd2Vlbi50byhUd2Vlbk9iamVjdCzCoGR1cmF0aW9uLMKgcGFyYW1zKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHRyecKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvL8Kgd3JhcMKgVHdlZW7CoGludG/CoGHCoFRpbWVsaW5lwqBPYmplY3TCoGlmwqBhdmFpbGFibGXCoHRvwqBpbmNsdWRlwqBkZWxhecKgYW5kwqByZXBlYXRzwqBpbsKgdGhlwqBkdXJhdGlvbsKgYW5kwqBzdGFuZGFyZGl6ZcKgbWV0aG9kcy5cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChUaW1lbGluZSnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBuZXdUd2VlbsKgPcKgbmV3wqBUaW1lbGluZSh7c21vb3RoQ2hpbGRUaW1pbmc6wqB0cnVlfSlcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoC5hZGQoVHdlZW5PYmplY3QpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9wqBlbHNlwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgbmV3VHdlZW7CoD3CoFR3ZWVuT2JqZWN0O1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoG5ld1R3ZWVuLnBhdXNlKCk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9wqBjYXRjaMKgKGUpwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGxvZygxLMKgXCJFUlJPUsKgY2FsbGluZ8KgbWV0aG9kwqAnc2V0VHdlZW4oKSc6wqBTdXBwbGllZMKgYXJndW1lbnTCoGlzwqBub3TCoGHCoHZhbGlkwqBUd2Vlbk9iamVjdFwiKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgcmV0dXJuwqBTY2VuZTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGlmwqAoX3R3ZWVuKcKge8KgLy/CoGtpbGzCoG9sZMKgdHdlZW4/XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoFNjZW5lLnJlbW92ZVR3ZWVuKCk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW7CoD3CoG5ld1R3ZWVuO1xuXG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvL8Kgc29tZcKgcHJvcGVydGllc8KgbmVlZMKgdG/CoGJlwqB0cmFuc2ZlcnJlZMKgaXTCoHRvwqB0aGXCoHdyYXBwZXIswqBvdGhlcndpc2XCoHRoZXnCoHdvdWxkwqBnZXTCoGxvc3QuXG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKFR3ZWVuT2JqZWN0LnJlcGVhdMKgJibCoFR3ZWVuT2JqZWN0LnJlcGVhdCgpwqA9PT3CoC0xKcKgey8vwqBUd2Vlbk1heMKgb3LCoFRpbWVsaW5lTWF4wqBPYmplY3Q/XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoF90d2Vlbi5yZXBlYXQoLTEpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4ueW95byhUd2Vlbk9iamVjdC55b3lvKCkpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgLy/CoChCVUlMRCnCoC3CoFJFTU9WRcKgSU7CoE1JTklGWcKgLcKgU1RBUlRcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoC8vwqBTb21lwqB0d2VlbsKgdmFsaWRhdGlvbnPCoGFuZMKgZGVidWdnaW5nwqBoZWxwZXJzXG5cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGlmwqAoU2NlbmUudHdlZW5DaGFuZ2VzKCnCoCYmwqAhX3R3ZWVuLnR3ZWVuVG8pwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGxvZygyLMKgXCJXQVJOSU5HOsKgdHdlZW5DaGFuZ2VzwqB3aWxswqBvbmx5wqB3b3JrwqBpZsKgdGhlwqBUaW1lbGluZU1heMKgb2JqZWN0wqBpc8KgYXZhaWxhYmxlwqBmb3LCoFNjcm9sbE1hZ2ljLlwiKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cblxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgLy/CoGNoZWNrwqBpZsKgdGhlcmXCoGFyZcKgcG9zaXRpb27CoHR3ZWVuc8KgZGVmaW5lZMKgZm9ywqB0aGXCoHRyaWdnZXLCoGFuZMKgd2FybsKgYWJvdXTCoGl0wqA6KVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChfdHdlZW7CoCYmwqBTY2VuZS5jb250cm9sbGVyKCnCoMKgJibCoFNjZW5lLnRyaWdnZXJFbGVtZW50KCnCoCYmwqBTY2VuZS5sb2dsZXZlbCgpwqA+PcKgMinCoHsvL8KgY29udHJvbGxlcsKgaXPCoG5lZWRlZMKgdG/CoGtub3fCoHNjcm9sbMKgZGlyZWN0aW9uLlxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2YXJcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB0cmlnZ2VyVHdlZW5zwqA9wqBUd2Vlbi5nZXRUd2VlbnNPZihTY2VuZS50cmlnZ2VyRWxlbWVudCgpKSxcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2ZXJ0aWNhbMKgPcKgU2NlbmUuY29udHJvbGxlcigpLmluZm8oXCJ2ZXJ0aWNhbFwiKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdHJpZ2dlclR3ZWVucy5mb3JFYWNoKGZ1bmN0aW9uwqAodmFsdWUswqBpbmRleCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2YXJcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHR3ZWVudmFyc8KgPcKgdmFsdWUudmFycy5jc3PCoHx8wqB2YWx1ZS52YXJzLFxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgY29uZGl0aW9uwqA9wqB2ZXJ0aWNhbMKgP8KgKHR3ZWVudmFycy50b3DCoCE9PcKgdW5kZWZpbmVkwqB8fMKgdHdlZW52YXJzLmJvdHRvbcKgIT09wqB1bmRlZmluZWQpwqA6wqAodHdlZW52YXJzLmxlZnTCoCE9PcKgdW5kZWZpbmVkwqB8fMKgdHdlZW52YXJzLnJpZ2h0wqAhPT3CoHVuZGVmaW5lZCk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChjb25kaXRpb24pwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBsb2coMizCoFwiV0FSTklORzrCoFR3ZWVuaW5nwqB0aGXCoHBvc2l0aW9uwqBvZsKgdGhlwqB0cmlnZ2VywqBlbGVtZW50wqBhZmZlY3RzwqB0aGXCoHNjZW5lwqB0aW1pbmfCoGFuZMKgc2hvdWxkwqBiZcKgYXZvaWRlZCFcIik7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqByZXR1cm7CoGZhbHNlO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfSk7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG5cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoC8vwqB3YXJuwqBhYm91dMKgdHdlZW7CoG92ZXJ3cml0ZXMswqB3aGVuwqBhbsKgZWxlbWVudMKgaXPCoHR3ZWVuZWTCoG11bHRpcGxlwqB0aW1lc1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChwYXJzZUZsb2F0KFR3ZWVuTGl0ZS52ZXJzaW9uKcKgPj3CoDEuMTQpwqB7wqAvL8Kgb25PdmVyd3JpdGXCoG9ubHnCoHByZXNlbnTCoHNpbmNlwqBHU0FQwqB2MS4xNC4wXG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHZhclxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGxpc3TCoD3CoF90d2Vlbi5nZXRDaGlsZHJlbsKgP8KgX3R3ZWVuLmdldENoaWxkcmVuKHRydWUswqB0cnVlLMKgZmFsc2UpwqA6wqBbX3R3ZWVuXSzCoC8vwqBnZXTCoGFsbMKgbmVzdGVkwqB0d2VlbsKgb2JqZWN0c1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoG5ld0NhbGxiYWNrwqA9wqBmdW5jdGlvbsKgKCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoGxvZygyLMKgXCJXQVJOSU5HOsKgdHdlZW7CoHdhc8Kgb3ZlcndyaXR0ZW7CoGJ5wqBhbm90aGVyLsKgVG/CoGxlYXJuwqBob3fCoHRvwqBhdm9pZMKgdGhpc8KgaXNzdWXCoHNlZcKgaGVyZTrCoGh0dHBzOi8vZ2l0aHViLmNvbS9qYW5wYWVwa2UvU2Nyb2xsTWFnaWMvd2lraS9XQVJOSU5HOi10d2Vlbi13YXMtb3ZlcndyaXR0ZW4tYnktYW5vdGhlclwiKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9O1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBmb3LCoCh2YXLCoGk9MCzCoHRoaXNUd2VlbizCoG9sZENhbGxiYWNrO8KgaTxsaXN0Lmxlbmd0aDvCoGkrKynCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAvKmpzaGludMKgbG9vcGZ1bmM6wqB0cnVlwqAqL1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoHRoaXNUd2VlbsKgPcKgbGlzdFtpXTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKG9sZENhbGxiYWNrwqAhPT3CoG5ld0NhbGxiYWNrKcKge8KgLy/CoGlmwqB0d2VlbnPCoGlzwqBhZGRlZMKgbW9yZcKgdGhhbsKgb25jZVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgb2xkQ2FsbGJhY2vCoD3CoHRoaXNUd2Vlbi52YXJzLm9uT3ZlcndyaXRlO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdGhpc1R3ZWVuLnZhcnMub25PdmVyd3JpdGXCoD3CoGZ1bmN0aW9uwqAoKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKG9sZENhbGxiYWNrKcKge1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoG9sZENhbGxiYWNrLmFwcGx5KHRoaXMswqBhcmd1bWVudHMpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoG5ld0NhbGxiYWNrLmFwcGx5KHRoaXMswqBhcmd1bWVudHMpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB9XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoH1cbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoC8vwqAoQlVJTEQpwqAtwqBSRU1PVkXCoElOwqBNSU5JRlnCoC3CoEVORFxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgbG9nKDMswqBcImFkZGVkwqB0d2VlblwiKTtcblxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdXBkYXRlVHdlZW5Qcm9ncmVzcygpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgcmV0dXJuwqBTY2VuZTtcbsKgwqDCoMKgwqDCoMKgwqB9O1xuXG7CoMKgwqDCoMKgwqDCoMKgLyoqXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBSZW1vdmXCoHRoZcKgdHdlZW7CoGZyb23CoHRoZcKgc2NlbmUuwqDCoFxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgVGhpc8Kgd2lsbMKgdGVybWluYXRlwqB0aGXCoGNvbnRyb2zCoG9mwqB0aGXCoFNjZW5lwqBvdmVywqB0aGXCoHR3ZWVuLlxuwqDCoMKgwqDCoMKgwqDCoMKgKlxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgVXNpbmfCoHRoZcKgcmVzZXTCoG9wdGlvbsKgeW91wqBjYW7CoGRlY2lkZcKgaWbCoHRoZcKgdHdlZW7CoHNob3VsZMKgcmVtYWluwqBpbsKgdGhlwqBjdXJyZW50wqBzdGF0ZcKgb3LCoGJlwqByZXdvdW5kwqB0b8Kgc2V0wqB0aGXCoHRhcmdldMKgZWxlbWVudHPCoGJhY2vCoHRvwqB0aGXCoHN0YXRlwqB0aGV5wqB3ZXJlwqBpbsKgYmVmb3JlwqB0aGXCoHR3ZWVuwqB3YXPCoGFkZGVkwqB0b8KgdGhlwqBzY2VuZS5cbsKgwqDCoMKgwqDCoMKgwqDCoCrCoEBtZW1iZXJvZiHCoGFuaW1hdGlvbi5HU0FQI1xuwqDCoMKgwqDCoMKgwqDCoMKgKlxuwqDCoMKgwqDCoMKgwqDCoMKgKsKgQGV4YW1wbGVcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoC8vwqByZW1vdmXCoHRoZcKgdHdlZW7CoGZyb23CoHRoZcKgc2NlbmXCoHdpdGhvdXTCoHJlc2V0dGluZ8KgaXRcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoHNjZW5lLnJlbW92ZVR3ZWVuKCk7XG7CoMKgwqDCoMKgwqDCoMKgwqAqXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqAvL8KgcmVtb3ZlwqB0aGXCoHR3ZWVuwqBmcm9twqB0aGXCoHNjZW5lwqBhbmTCoHJlc2V0wqBpdMKgdG/CoGluaXRpYWzCoHBvc2l0aW9uXG7CoMKgwqDCoMKgwqDCoMKgwqAqwqBzY2VuZS5yZW1vdmVUd2Vlbih0cnVlKTtcbsKgwqDCoMKgwqDCoMKgwqDCoCpcbsKgwqDCoMKgwqDCoMKgwqDCoCrCoEBwYXJhbcKge2Jvb2xlYW59wqBbcmVzZXQ9ZmFsc2VdwqAtwqBJZsKgYHRydWVgwqB0aGXCoHR3ZWVuwqB3aWxswqBiZcKgcmVzZXTCoHRvwqBpdHPCoGluaXRpYWzCoHZhbHVlcy5cbsKgwqDCoMKgwqDCoMKgwqDCoCrCoEByZXR1cm5zwqB7U2NlbmV9wqBQYXJlbnTCoG9iamVjdMKgZm9ywqBjaGFpbmluZy5cbsKgwqDCoMKgwqDCoMKgwqDCoCovXG7CoMKgwqDCoMKgwqDCoMKgU2NlbmUucmVtb3ZlVHdlZW7CoD3CoGZ1bmN0aW9uwqAocmVzZXQpwqB7XG7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBpZsKgKF90d2VlbinCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgaWbCoChyZXNldCnCoHtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4ucHJvZ3Jlc3MoMCkucGF1c2UoKTtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW4ua2lsbCgpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqBfdHdlZW7CoD3CoHVuZGVmaW5lZDtcbsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgbG9nKDMswqBcInJlbW92ZWTCoHR3ZWVuwqAocmVzZXQ6wqBcIsKgK8KgKHJlc2V0wqA/wqBcInRydWVcIsKgOsKgXCJmYWxzZVwiKcKgK8KgXCIpXCIpO1xuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgfVxuwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgcmV0dXJuwqBTY2VuZTtcbsKgwqDCoMKgwqDCoMKgwqB9O1xuXG7CoMKgwqDCoH0pO1xufSkpO1xuIl19
